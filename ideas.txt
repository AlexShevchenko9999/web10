web10 log of calls / charges / errors per user
service whitelist configurable credit limits (requester,period)
    - by requester type [web10 user or ip]
    - regex kind of expression
web10 backend service for automatic whitelist blacklist management for anti spam

Documentation discussion of data policies 
(1V1) sender vs. reciever [Modifiability vs. Immutability]
(Modification) slate vs. playground [Soloist vs. Chorus] 
(Read) limited vs. universal [Colloseum tiered seating vs. Library sit where you want]

fix skaffold dev sync inference
Fix off by a few pixels height react
Fix mobile address bar wiggle
Address Per Record Privacy
debug cross web10 requests

shouldnt be able to rename services from backend
service editor ui don't allow addition of already existing fields
make the web10 key a notification button [for verify,smrs,log in]
meter reads and writes!!! and updates!! to exact file sizes
dont allow aggregation queries
Document auth portal / service editor.
document that only true values are read on whitelists and blacklists
document that "all" overrides

/per service usage statistics

whitelist credit limiting
web10 gridFS file storage

reactnative fs storage [persists after uninstall?]

connecting user to user makes sense
but that means there are user squared possible connections which would be really expensive.
what if services had connections that many users connected to instead of just one to one connection
how can there be reasonable pools to connect to with access control?
a large group of people connected to webrtc but with access monitored.
i.e. what if someone were to be banned from the network?
what if a service relies on pools of webrtc to operate rather than just one to one

one to one is legitimately feasible, so focus on one to one rather than worry.

encryptor connections are inbound ONLY
    - why would encryptor hit up the user first?
    - user needs encryptor to encrypt
    - encryptor doesn't need user
User connections are both ways
    - if a user has multiple apps open, how to handle?

allow devs to put a type on connections for multi device scenarios

web10 subservices are developer manageable stricter services within a service w/o SMRs

make web10 user service backend access keys [ for apis ]
make python and nodeJS docs for backend hookup

diffie helman encryption

web10 mediaconnections
navigator.mediaDevices.getUserMedia({video:true,audio:true})


peerjs certify with remote provider flow

make a webRTC connections robust first person shooter game with web10RTC


implement SCR $set
implement SCR $unset / $pull


web10 doesn't allow for rigorous admin gatekeeping ..
it allows for consentual gatekeeping
web10 moderator : a service that allows for centralized moderation.
charged evenly across the web10 accounts using it.

integrate service import data functionality

blotch out login button until SMRs are approved
make the approve service button send you back to login page
phone number add ? why we take numbers